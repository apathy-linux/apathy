From be4cdcc82ffd1bc78203f65d9e0a100972810cff Mon Sep 17 00:00:00 2001
From: must_eat <mss@tutanota.de>
Date: Wed, 19 Apr 2023 14:41:28 +0300
Subject: [PATCH 1/7] llvm: musl fixes.

---
 llvm/include/llvm/Analysis/TargetLibraryInfo.h | 9 +++++++++
 llvm/lib/Support/Unix/DynamicLibrary.inc       | 2 +-
 2 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/llvm/include/llvm/Analysis/TargetLibraryInfo.h b/llvm/include/llvm/Analysis/TargetLibraryInfo.h
index 934c43d16..5e5167e99 100644
--- a/llvm/include/llvm/Analysis/TargetLibraryInfo.h
+++ b/llvm/include/llvm/Analysis/TargetLibraryInfo.h
@@ -18,6 +18,15 @@
 #include "llvm/IR/PassManager.h"
 #include "llvm/Pass.h"
 
+#undef fopen64
+#undef fseeko64
+#undef fstat64
+#undef fstatvfs64
+#undef ftello64
+#undef lstat64
+#undef stat64
+#undef tmpfile64
+
 namespace llvm {
 
 template <typename T> class ArrayRef;
diff --git a/llvm/lib/Support/Unix/DynamicLibrary.inc b/llvm/lib/Support/Unix/DynamicLibrary.inc
index a2a379963..2f86c470c 100644
--- a/llvm/lib/Support/Unix/DynamicLibrary.inc
+++ b/llvm/lib/Support/Unix/DynamicLibrary.inc
@@ -102,7 +102,7 @@ static void *DoSearch(const char* SymbolName) {
 
 // This macro returns the address of a well-known, explicit symbol
 #define EXPLICIT_SYMBOL(SYM) \
-   if (!strcmp(SymbolName, #SYM)) return &SYM
+   if (!strcmp(SymbolName, #SYM)) return (void *)&SYM
 
 // Under glibc we have a weird situation. The stderr/out/in symbols are both
 // macros and global variables because of standards requirements. So, we
-- 
2.40.0

