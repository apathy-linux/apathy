# 1
cdt1

printprof vanilla > buildprof
. buildprof; rm -rf buildprof

 money="/mss/work/table/KEK"
findir="/opt/rocm"
export          CFLAGS="${CFLAGS}   -I${findir}/include -L${findir}/lib -L${money}/lib -I${money}/include"
export        CXXFLAGS="${CXXFLAGS} -I${findir}/include -L${findir}/lib -L${money}/lib -I${money}/include"
export            PATH="${PATH}:${PWD}/ruby/bin:${money}/bin"
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:${PWD}/ruby/lib/pkgconfig:${money}/lib/pkgconfig"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${PWD}/ruby/lib:${findir}/lib:${money}/lib"
export    LIBRARY_PATH="${LD_LIBRARY_PATH}"

tar xf /mnt/mss/stuff/techy-bits/packaged-software/ruby-3.2.2.tar.zst

# 2
tar xf /mss/work/sauces/opencl-headers-2022.09.30.tar.gz
cd     OpenCL-Headers-2022.09.30/

mkdir KEK/CL/

for i in CL/*.h; do mv "${i}" KEK/CL/; done

rm -rfv KEK/CL/{cl_d3d,cl_dx9}*.h

doas -s
mkdir     /opt/rocm/include/
mv KEK/CL /opt/rocm/include/
exit

cd ../; rm -rf OpenCL-Headers-2022.09.30/

# 3
tar xf /mss/work/sauces/ocl-icd-2.3.1.tar.gz
cd     ocl-icd-2.3.1/

autoreconf -fvi

./configure \
 --build=$CBUILD                               \
 --host=$CHOST                                 \
 --prefix="${findir}"                          \
 --enable-shared                               \
 --enable-custom-vendordir="${findir}/vendors" \
 --disable-debug                               \
 --disable-static

make
doas -- make install

cd ../; rm -rf ocl-icd-2.3.1/

# 4
tar xf /mss/work/sauces/numactl-2.0.16.tar.gz
cd     numactl-2.0.16/

autoreconf -fvi

./configure \
 --build=$CBUILD      \
 --host=$CHOST        \
 --prefix="${findir}" \
 --enable-shared      \
 --disable-static

make
doas -- make install

cd ../; rm -rf numactl-2.0.16/

# 5
tar xf /mss/work/sauces/rocm-llvm-project-5.4.3.tar.gz
cd     llvm-project-rocm-5.4.3/

pdir="/mss/repo/pkg/recipes/rocm/patches"
for file in "${pdir}"/*-rocm-llvm-project-*.patch; do patch -p1 < "${file}"; done

cleancmake

mkdir build
cd    build

myproj="llvm;clang;compiler-rt;lld"
money="/mss/work/table/KEK"

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${money}"                   \
 -DCMAKE_C_FLAGS="$CFLAGS"                           \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"                       \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"                 \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS"              \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"                \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"                  \
\
 -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=ON             \
 -DLLVM_ENABLE_PROJECTS="${myproj}"                  \
 -DLLVM_TOOL_LIBCXXABI_BUILD=OFF                     \
 -DLLVM_TOOL_LIBCXX_BUILD=OFF                        \
 -DLLVM_TOOL_LIBUNWIND_BUILD=OFF                     \
 -DLLVM_TOOL_OPENMP_BUILD=OFF                        \
\
 -DLLVM_DEFAULT_TARGET_TRIPLE="$CHOST"               \
 -DLLVM_HOST_TRIPLE="$CHOST"                         \
 -DLLVM_TARGETS_TO_BUILD="host;AMDGPU"               \
 -DLLVM_TARGET_ARCH="host"                           \
 -DLLVM_VERSION_SUFFIX=""                            \
\
 -DLLVM_ENABLE_LTO=OFF                               \
\
 -DLLVM_BUILD_LLVM_DYLIB=OFF                         \
 -DLLVM_BUILD_STATIC=OFF                             \
 -DLLVM_BUILD_UTILS=OFF                              \
 -DLLVM_ENABLE_BINDINGS=OFF                          \
 -DLLVM_ENABLE_LLD=ON                                \
 -DLLVM_INSTALL_UTILS=ON                             \
 -DLLVM_LINK_LLVM_DYLIB=OFF                          \
\
 -DGOLD_EXECUTABLE=GOLD_EXECUTABLE-NOTFOUND          \
 -DLLVM_APPEND_VC_REV=OFF                            \
 -DLLVM_ENABLE_ASSERTIONS=OFF                        \
 -DLLVM_ENABLE_BACKTRACES=OFF                        \
 -DLLVM_ENABLE_CURL=OFF                              \
 -DLLVM_ENABLE_EH=ON                                 \
 -DLLVM_ENABLE_FFI=ON                                \
 -DLLVM_ENABLE_LIBCXX=ON                             \
 -DLLVM_ENABLE_LIBEDIT=OFF                           \
 -DLLVM_ENABLE_LIBPFM=OFF                            \
 -DLLVM_ENABLE_LIBXML2=OFF                           \
 -DLLVM_ENABLE_PIC=ON                                \
 -DLLVM_ENABLE_RTTI=ON                               \
 -DLLVM_ENABLE_TERMINFO=OFF                          \
 -DLLVM_ENABLE_WARNINGS=OFF                          \
 -DLLVM_ENABLE_Z3_SOLVER=OFF                         \
 -DLLVM_ENABLE_ZLIB=ON                               \
 -DLLVM_OMIT_DAGISEL_COMMENTS=ON                     \
 -DLLVM_OPTIMIZED_TABLEGEN=ON                        \
 -DLLVM_USE_FOLDERS=OFF                              \
 -DOCAMLFIND=NO                                      \
 -DPython3_EXECUTABLE=/usr/bin/python3               \
\
 -DLLVM_TOOL_BUGPOINT_BUILD=OFF                      \
 -DLLVM_TOOL_BUGPOINT_PASSES_BUILD=OFF               \
 -DLLVM_TOOL_CLANG_TOOLS_EXTRA_BUILD=OFF             \
 -DLLVM_TOOL_CROSS_PROJECT_TESTS_BUILD=OFF           \
 -DLLVM_TOOL_DSYMUTIL_BUILD=OFF                      \
 -DLLVM_TOOL_DXIL_DIS_BUILD=OFF                      \
 -DLLVM_TOOL_DXIL_DIS_BUILD=ON                       \
 -DLLVM_TOOL_GOLD_BUILD=OFF                          \
 -DLLVM_TOOL_LLVM_AS_FUZZER_BUILD=OFF                \
 -DLLVM_TOOL_LLVM_BCANALYZER_BUILD=OFF               \
 -DLLVM_TOOL_LLVM_CAT_BUILD=OFF                      \
 -DLLVM_TOOL_LLVM_CFI_VERIFY_BUILD=OFF               \
 -DLLVM_TOOL_LLVM_CVTRES_BUILD=OFF                   \
 -DLLVM_TOOL_LLVM_CXXDUMP_BUILD=OFF                  \
 -DLLVM_TOOL_LLVM_CXXMAP_BUILD=OFF                   \
 -DLLVM_TOOL_LLVM_C_TEST_BUILD=OFF                   \
 -DLLVM_TOOL_LLVM_DEBUGINFOD_BUILD=OFF               \
 -DLLVM_TOOL_LLVM_DEBUGINFOD_FIND_BUILD=OFF          \
 -DLLVM_TOOL_LLVM_DIFF_BUILD=OFF                     \
 -DLLVM_TOOL_LLVM_DIS_BUILD=OFF                      \
 -DLLVM_TOOL_LLVM_DIS_FUZZER_BUILD=OFF               \
 -DLLVM_TOOL_LLVM_DIS_FUZZER_BUILD=ON                \
 -DLLVM_TOOL_LLVM_DLANG_DEMANGLE_FUZZER_BUILD=OFF    \
 -DLLVM_TOOL_LLVM_DWARFDUMP_BUILD=OFF                \
 -DLLVM_TOOL_LLVM_DWARFUTIL_BUILD=OFF                \
 -DLLVM_TOOL_LLVM_DWP_BUILD=ON                       \
 -DLLVM_TOOL_LLVM_EXEGESIS_BUILD=OFF                 \
 -DLLVM_TOOL_LLVM_EXTRACT_BUILD=OFF                  \
 -DLLVM_TOOL_LLVM_GO_BUILD=OFF                       \
 -DLLVM_TOOL_LLVM_GSYMUTIL_BUILD=OFF                 \
 -DLLVM_TOOL_LLVM_IFS_BUILD=OFF                      \
 -DLLVM_TOOL_LLVM_ISEL_FUZZER_BUILD=OFF              \
 -DLLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD=OFF  \
 -DLLVM_TOOL_LLVM_JITLINK_BUILD=OFF                  \
 -DLLVM_TOOL_LLVM_JITLISTENER_BUILD=OFF              \
 -DLLVM_TOOL_LLVM_LIBTOOL_DARWIN_BUILD=OFF           \
 -DLLVM_TOOL_LLVM_LINK_BUILD=ON                      \
 -DLLVM_TOOL_LLVM_LIPO_BUILD=OFF                     \
 -DLLVM_TOOL_LLVM_MCA_BUILD=OFF                      \
 -DLLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD=OFF       \
 -DLLVM_TOOL_LLVM_MC_BUILD=OFF                       \
 -DLLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD=OFF    \
 -DLLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD=OFF\
 -DLLVM_TOOL_LLVM_ML_BUILD=OFF                       \
 -DLLVM_TOOL_LLVM_MODEXTRACT_BUILD=OFF               \
 -DLLVM_TOOL_LLVM_MT_BUILD=OFF                       \
 -DLLVM_TOOL_LLVM_OPT_FUZZER_BUILD=OFF               \
 -DLLVM_TOOL_LLVM_OPT_REPORT_BUILD=OFF               \
 -DLLVM_TOOL_LLVM_PDBUTIL_BUILD=OFF                  \
 -DLLVM_TOOL_LLVM_PROFDATA_BUILD=OFF                 \
 -DLLVM_TOOL_LLVM_PROFGEN_BUILD=OFF                  \
 -DLLVM_TOOL_LLVM_RC_BUILD=OFF                       \
 -DLLVM_TOOL_LLVM_REDUCE_BUILD=OFF                   \
 -DLLVM_TOOL_LLVM_REMARK_SIZE_DIFF_BUILD=OFF         \
 -DLLVM_TOOL_LLVM_RTDYLD_BUILD=OFF                   \
 -DLLVM_TOOL_LLVM_RUST_DEMANGLE_FUZZER_BUILD=OFF     \
 -DLLVM_TOOL_LLVM_SHLIB_BUILD=ON                     \
 -DLLVM_TOOL_LLVM_SIM_BUILD=OFF                      \
 -DLLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD=OFF \
 -DLLVM_TOOL_LLVM_SPLIT_BUILD=OFF                    \
 -DLLVM_TOOL_LLVM_STRESS_BUILD=OFF                   \
 -DLLVM_TOOL_LLVM_SYMBOLIZER_BUILD=OFF               \
 -DLLVM_TOOL_LLVM_SYMBOLIZER_BUILD=ON                \
 -DLLVM_TOOL_LLVM_TAPI_DIFF_BUILD=OFF                \
 -DLLVM_TOOL_LLVM_TLI_CHECKER_BUILD=OFF              \
 -DLLVM_TOOL_LLVM_UNDNAME_BUILD=OFF                  \
 -DLLVM_TOOL_LLVM_XRAY_BUILD=OFF                     \
 -DLLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD=OFF\
 -DLLVM_TOOL_LLVM_YAML_PARSER_FUZZER_BUILD=OFF       \
 -DLLVM_TOOL_OBJ2YAML_BUILD=OFF                      \
 -DLLVM_TOOL_OPT_BUILD=ON                            \
 -DLLVM_TOOL_OPT_VIEWER_BUILD=OFF                    \
 -DLLVM_TOOL_REMARKS_SHLIB_BUILD=ON                  \
 -DLLVM_TOOL_SANCOV_BUILD=OFF                        \
 -DLLVM_TOOL_SANSTATS_BUILD=OFF                      \
 -DLLVM_TOOL_SPLIT_FILE_BUILD=OFF                    \
 -DLLVM_TOOL_VERIFY_USELISTORDER_BUILD=OFF           \
 -DLLVM_TOOL_VFABI_DEMANGLE_FUZZER_BUILD=OFF         \
 -DLLVM_TOOL_XCODE_TOOLCHAIN_BUILD=OFF               \
 -DLLVM_TOOL_YAML2OBJ_BUILD=OFF                      \
\
 -DCLANG_DEFAULT_CXX_STDLIB="libc++"                 \
 -DCLANG_DEFAULT_LINKER="lld"                        \
 -DCLANG_DEFAULT_OBJCOPY="llvm-objcopy"              \
 -DCLANG_DEFAULT_OPENMP_RUNTIME="libomp"             \
 -DCLANG_DEFAULT_PIE_ON_LINUX=ON                     \
 -DCLANG_DEFAULT_RTLIB="compiler-rt"                 \
 -DCLANG_DEFAULT_UNWINDLIB="libunwind"               \
 -DCLANG_ENABLE_ARCMT=OFF                            \
 -DCLANG_ENABLE_STATIC_ANALYZER=OFF                  \
 -DCLANG_LINK_CLANG_DYLIB=OFF                        \
 -DCLANG_PLUGIN_SUPPORT=ON                           \
 -DCLANG_TOOLING_BUILD_AST_INTROSPECTION=OFF         \
 -DCLANG_TOOL_AMDGPU_ARCH_BUILD=ON                   \
 -DCLANG_TOOL_APINOTES_TEST_BUILD=OFF                \
 -DCLANG_TOOL_ARCMT_TEST_BUILD=OFF                   \
 -DCLANG_TOOL_CLANG_CHECK_BUILD=OFF                  \
 -DCLANG_TOOL_CLANG_DIFF_BUILD=OFF                   \
 -DCLANG_TOOL_CLANG_EXTDEF_MAPPING_BUILD=OFF         \
 -DCLANG_TOOL_CLANG_FORMAT_BUILD=OFF                 \
 -DCLANG_TOOL_CLANG_FORMAT_VS_BUILD=OFF              \
 -DCLANG_TOOL_CLANG_FUZZER_BUILD=OFF                 \
 -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=OFF            \
 -DCLANG_TOOL_CLANG_LINKER_WRAPPER_BUILD=OFF         \
 -DCLANG_TOOL_CLANG_NVLINK_WRAPPER_BUILD=OFF         \
 -DCLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD=OFF        \
 -DCLANG_TOOL_CLANG_OFFLOAD_PACKAGER_BUILD=OFF       \
 -DCLANG_TOOL_CLANG_OFFLOAD_WRAPPER_BUILD=OFF        \
 -DCLANG_TOOL_CLANG_REFACTOR_BUILD=OFF               \
 -DCLANG_TOOL_CLANG_RENAME_BUILD=OFF                 \
 -DCLANG_TOOL_CLANG_REPL_BUILD=OFF                   \
 -DCLANG_TOOL_CLANG_SCAN_DEPS_BUILD=OFF              \
 -DCLANG_TOOL_CLANG_SHLIB_BUILD=ON                   \
 -DCLANG_TOOL_C_ARCMT_TEST_BUILD=OFF                 \
 -DCLANG_TOOL_C_INDEX_TEST_BUILD=OFF                 \
 -DCLANG_TOOL_DIAGTOOL_BUILD=OFF                     \
 -DCLANG_TOOL_SCAN_BUILD_BUILD=OFF                   \
 -DCLANG_TOOL_SCAN_BUILD_PY_BUILD=OFF                \
 -DCLANG_TOOL_SCAN_VIEW_BUILD=OFF                    \
 -DCLANG_VENDOR="apathy"                             \
 -DCLANG_VENDOR_UTI="us.among.gottaeat"              \
 -DENABLE_LINKER_BUILD_ID=OFF                        \
 -DLIBCLANG_BUILD_STATIC=OFF                         \
 -DLLD_VENDOR="apathy"                               \
\
 -DCOMPILER_RT_BUILD_GWP_ASAN=OFF                    \
 -DCOMPILER_RT_BUILD_LIBFUZZER=OFF                   \
 -DCOMPILER_RT_BUILD_MEMPROF=OFF                     \
 -DCOMPILER_RT_BUILD_ORC=OFF                         \
 -DCOMPILER_RT_BUILD_PROFILE=OFF                     \
 -DCOMPILER_RT_BUILD_SANITIZERS=OFF                  \
 -DCOMPILER_RT_BUILD_STANDALONE_LIBATOMIC=OFF        \
 -DCOMPILER_RT_BUILD_XRAY=OFF                        \
 -DCOMPILER_RT_BUILTINS_HIDE_SYMBOLS=ON              \
 -DCOMPILER_RT_CAN_EXECUTE_TESTS=OFF                 \
 -DCOMPILER_RT_DEFAULT_TARGET_ONLY=ON                \
 -DCOMPILER_RT_ENABLE_CET=OFF                        \
 -DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=OFF            \
 -DCOMPILER_RT_HWASAN_WITH_INTERCEPTORS=OFF          \
 -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON               \
 -DSANITIZER_ALLOW_CXXABI=OFF                        \
\
 -DCLANG_BUILD_EXAMPLES=OFF                          \
 -DCLANG_INCLUDE_DOCS=OFF                            \
 -DCLANG_INCLUDE_TESTS=OFF                           \
 -DCOMPILER_RT_INCLUDE_TESTS=OFF                     \
 -DLLVM_BUILD_DOCS=OFF                               \
 -DLLVM_BUILD_EXAMPLES=OFF                           \
 -DLLVM_BUILD_TESTS=OFF                              \
 -DLLVM_ENABLE_DOXYGEN=OFF                           \
 -DLLVM_ENABLE_OCAMLDOC=OFF                          \
 -DLLVM_ENABLE_SPHINX=OFF                            \
 -DLLVM_INCLUDE_BENCHMARKS=OFF                       \
 -DLLVM_INCLUDE_DOCS=OFF                             \
 -DLLVM_INCLUDE_EXAMPLES=OFF                         \
 -DLLVM_INCLUDE_GO_TESTS=OFF                         \
 -DLLVM_INCLUDE_TESTS=OFF                            \
\
 ../llvm

time samu
samu install

sync

cd ../../; rm -rf llvm-project-rocm-5.4.3/

# 6
tar xf /mss/work/sauces/rocm-rocm-cmake-5.4.4.tar.gz
cd     rocm-cmake-rocm-5.4.4/

cleancmake

mkdir build
cd    build

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${findir}"     \
 -DCMAKE_C_FLAGS="$CFLAGS"              \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"          \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"    \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS" \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"   \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"     \
\
 -DROCM_DISABLE_LDCONFIG=ON             \
 ../

samu
doas -- samu install

cd ../../; rm -rf rocm-cmake-rocm-5.4.4/

# 7
tar xf /mss/work/sauces/rocm-device-libs-5.4.4.tar.gz
cd     ROCm-Device-Libs-rocm-5.4.4/

cleancmake

mkdir build
cd    build

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${findir}"      \
 -DCMAKE_INSTALL_LIBDIR=lib              \
 -DCMAKE_C_FLAGS="$CFLAGS"               \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"           \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"     \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS"  \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"    \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"      \
\
 -DCMAKE_C_COMPILER="${money}"/bin/clang \
 -DClang_DIR="${money}"/lib/cmake/clang  \
 -DLLVM_DIR="${money}"/lib/cmake/llvm    \
 ../

samu
doas -- samu install

cd ../../; rm -rf ROCm-Device-Libs-rocm-5.4.4/

# 8
tar xf /mss/work/sauces/rocm-compiler-support-5.4.4.tar.gz
cd     ROCm-CompilerSupport-rocm-5.4.4/

for i in "${pdir}"/*-rocm-compiler-support-*.patch; do
 patch -p1 < "${i}"
done

cleancmake

mkdir build
cd    build

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${findir}"                      \
 -DCMAKE_INSTALL_LIBDIR=lib                              \
 -DCMAKE_C_FLAGS="$CFLAGS"                               \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"                           \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"                     \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS"                  \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"                    \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"                      \
\
 -DAMDDeviceLibs_DIR="${findir}"/lib/cmake/AMDDeviceLibs \
 -DBUILD_TESTING=OFF                                     \
 -DCOMGR_BUILD_SHARED_LIBS=ON                            \
 -DClang_DIR="${money}"/bin/clang                        \
 -DLLD_DIR="${money}"/lib/cmake/lld                      \
 -DLLVM_DIR="${money}"/lib/cmake/llvm                    \
 ../lib/comgr/

samu
doas -- samu install

cd ../../; rm -rf ROCm-CompilerSupport-rocm-5.4.4/

# 9
tar xf /mss/work/sauces/rocm-roct-thunk-interface-5.4.3.tar.gz
cd     ROCT-Thunk-Interface-rocm-5.4.3/

for i in "${pdir}"/*-rocm-roct-thunk-interface-*.patch; do
 patch -p1 < "${i}"
done

cleancmake

mkdir build
cd    build

printf 'INPUT(-lunwind)\n'                      > "${money}"/lib/libgcc_s.so
ln -sf "$(${CC} -print-file-name=libunwind.so)"   "${money}"/lib/libgcc_s.so.1

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${findir}"     \
 -DCMAKE_INSTALL_LIBDIR=lib             \
 -DCMAKE_C_FLAGS="$CFLAGS"              \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"          \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"    \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS" \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"   \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"     \
\
 -DBUILD_SHARED_LIBS=ON                 \
 -DLIBGCC="${money}"/lib/libgcc_s.so    \
 ../

samu
doas -- samu install

cd ../../; rm -rf ROCT-Thunk-Interface-rocm-5.4.3/

# 10
tar xf /mss/work/sauces/rocm-rocr-runtime-5.4.3.tar.gz
cd     ROCR-Runtime-rocm-5.4.3/

for i in "${pdir}"/*-rocm-rocr-runtime-rocm-*.patch; do
 patch -p1 < "${i}"
done

cleancmake

mkdir build
cd    build

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${findir}"       \
 -DCMAKE_INSTALL_LIBDIR=lib               \
 -DCMAKE_C_FLAGS="$CFLAGS"                \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"            \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"      \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS"   \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"     \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"       \
\
 -DCMAKE_PREFIX_PATH="${findir}"          \
 -DBUILD_SHARED_LIBS=ON                   \
 -DClang_DIR="${money}"/bin/cmake/clang   \
 -DLLVM_DIR="${money}"/lib/cmake/llvm     \
 ../src/

samu
doas -- samu install

cd ../../; rm -rf ROCR-Runtime-rocm-5.4.3/

# 11
tar xf /mss/work/sauces/rocm-rocm-opencl-runtime-5.4.4.tar.gz
tar xf /mss/work/sauces/rocm-rocclr-5.4.4.tar.gz

cd ROCclr-rocm-5.4.4/

for i in "${pdir}"/*-rocm-rocclr-*.patch; do
 patch -p1 < "${i}"
done

cleancmake

cd ../

cd ROCm-OpenCL-Runtime-rocm-5.4.4/

for i in "${pdir}"/*-rocm-opencl-runtime-*.patch; do
 patch -p1 < "${i}"
done

cleancmake

mkdir build
cd    build

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${findir}"                            \
 -DCMAKE_INSTALL_LIBDIR=lib                                    \
 -DCMAKE_C_FLAGS="$CFLAGS"                                     \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"                                 \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"                           \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS"                        \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"                          \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"                            \
\
 -DAMD_OPENCL_PATH="$(readlink -f ../)"                        \
 -DBUILD_ICD=OFF                                               \
 -DBUILD_SHARED_LIBS=ON                                        \
 -DBUILD_TESTING=OFF                                           \
 -DBUILD_TESTS=OFF                                             \
 -DCMAKE_PREFIX_PATH="$(readlink -f ../../ROCclr-rocm-5.4.4/)" \
 -DEMU_ENV=OFF                                                 \
 -DLLVM_DIR="${money}"/lib/cmake/llvm                          \
 -DNUMA_INCLUDE_DIR="${findir}"/include                        \
 -DNUMA_LIBRARIES="${findir}"/lib/libnuma.so.1.0.0             \
 -DROCM_ERROR_TOOLCHAIN_VAR=OFF                                \
 -DROCM_PATH="${findir}"                                       \
 -DROCM_WARN_TOOLCHAIN_VAR=OFF                                 \
 ..

samu

doas -- mv amdocl/libamdocl64.so tools/cltrace/libcltrace.so "${findir}"/lib/
doas -s
mkdir /opt/rocm/vendors
echo /opt/rocm/lib/libamdocl64.so > /opt/rocm/vendors/amdocl64.icd
exit

cd ../../; rm -rf \
 ROCm-OpenCL-Runtime-rocm-5.4.4/ \
 ROCclr-rocm-5.4.4/

# 12
tar xf /mss/work/sauces/clinfo-3.0.23.01.25.tar.gz
cd     clinfo-3.0.23.01.25/

make

doas -s
for i in clinfo; do
 strip --strip-all "${i}"
 chown root:root "${i}"
 mv "${i}" /opt/rocm/bin
done
exit

cd ../; rm -rf clinfo-3.0.23.01.25/

# 13
tar xf /mss/work/sauces/hashcat-6.2.6.tar.gz
cd     hashcat-6.2.6/

make \
 PREFIX="${findir}"  \
 SHARED=1            \
 USE_SYSTEM_XXHASH=0 \
 USE_SYSTEM_OPENCL=1 \
 USE_SYSTEM_ZLIB=0

doas -- make \
 PREFIX="${findir}"  \
 SHARED=1            \
 USE_SYSTEM_XXHASH=0 \
 USE_SYSTEM_OPENCL=1 \
 USE_SYSTEM_ZLIB=0   \
 install

cd ../; rm -rf hashcat-6.2.6/ KEK/ ruby/

# 14
doas -s
rm -rf /opt/rocm/amdgcn/
rm -rf /opt/rocm/hsa/
rm -rf /opt/rocm/include
rm -rf /opt/rocm/bin/{memhog,migratepages,migspeed,numactl,numademo,numastat}
rm -rf /opt/rocm/lib/{pkgconfig,cmake}
rm -rf /opt/rocm/share/{doc,man,pkgconfig,rocm}

    elfs="$(find /opt/rocm -type f -exec file {} ';' | grep 'ELF ')"
elfs_exe="$(echo "${elfs}" | awk '/executable, /   {gsub(/:/,""); print $1}')"
elfs_dyn="$(echo "${elfs}" | awk '/shared object, /{gsub(/:/,""); print $1}')"

for i in ${elfs_exe}; do strip --strip-all      "${i}"; done
for i in ${elfs_dyn}; do strip --strip-unneeded "${i}"; done

unset elfs elfs_exe elfs_dyn

cdt1

mv /opt/rocm .
pkgup rocm rocm-`dn`
mv rocm-*.tar.zst /mnt/mss/stuff/techy-bits/packaged-software/
