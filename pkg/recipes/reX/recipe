# 1 > env
penis="/mss/work/table/KEK"
export          CFLAGS="${CFLAGS}   -L${penis}/lib -I${penis}/include -fPIC -fPIE"
export        CXXFLAGS="${CXXFLAGS} -L${penis}/lib -I${penis}/include -fPIC -fPIE -std=gnu++14 -fpermissive"
export            PATH="${PATH}:${penis}/bin"
export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:${penis}/lib/pkgconfig"
export    LIBRARY_PATH="${LIBRARY_PATH}:${penis}/lib"

# 2 > openal
tar xf /mss/work/sauces/openal-soft-1.21.1.tar.gz
cd openal-soft-1.21.1/

cleancmake

mkdir builderoo
cd    builderoo

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${penis}"      \
 -DCMAKE_INSTALL_LIBDIR=lib             \
 -DCMAKE_C_FLAGS="$CFLAGS"              \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"          \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"    \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS" \
 -DCMAKE_AR="$AR"                       \
 -DCMAKE_NM="$NM"                       \
 -DCMAKE_STRIP="$STRIP"                 \
 -DCMAKE_RANLIB="$RANLIB"               \
 -DCMAKE_LINKER="$LD"                   \
 -DCMAKE_OBJCOPY="$OBJCOPY"             \
 -DCMAKE_OBJDUMP="$OBJDUMP"             \
 -DCMAKE_READELF="$READELF"             \
 -DCMAKE_ADDR2LINE="$ADDR2LINE"         \
 -DCMAKE_C_COMPILER="$CC"               \
 -DCMAKE_CXX_COMPILER="$CXX"            \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"     \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"   \
\
 -DLIBTYPE=STATIC                       \
 -DALSOFT_EXAMPLES=OFF                  \
 -DALSOFT_UTILS=OFF                     \
 -DALSOFT_TESTS=OFF                     \
\
 ../

samu
samu install
cd ../../; rm -rf openal-soft-1.21.1/

# 3 > glew
tar xf /mss/work/sauces/glew-2.1.0.tgz
cd     glew-2.1.0/

sed -i \
 -e '/INSTALL/s:-s::'                                       \
 -e '/$(CC) $(CFLAGS) -o/s:$(CFLAGS):$(CFLAGS) $(LDFLAGS):' \
 -e '/^.PHONY: .*\.pc$/d'                                   \
 Makefile

mymake(){
 make \
      AR="${AR}"            \
   STRIP=true               \
      CC="${CC}"            \
      LD="${CC} ${LDFLAGS}" \
  SYSTEM="linux"            \
  M_ARCH=""                 \
  LDFLAGS.EXTRA=""          \
  POPT="${CFLAGS}"          \
  "${@}"
}

mymake
mymake GLEW_PREFIX="${penis}" GLEW_DEST="${penis}" LIBDIR="${penis}/lib" install.all

rm -rfv \
 "${penis}"/lib/libGLEW.so     \
 "${penis}"/lib/libGLEW.so.2.1 \
 "${penis}"/lib/libGLEW.so.2.1.0

cd ../; rm -rf glew-2.1.0/

# 4 > glfw
tar xf /mss/work/sauces/glfw-3.3.4.tar.gz
cd     glfw-3.3.4

cleancmake

mkdir builderoo
cd    builderoo

cmake -Wno-dev -GNinja \
 -DCMAKE_INSTALL_PREFIX="${penis}"      \
 -DCMAKE_INSTALL_LIBDIR=lib             \
 -DCMAKE_C_FLAGS="$CFLAGS"              \
 -DCMAKE_CXX_FLAGS="$CXXFLAGS"          \
 -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"    \
 -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS" \
 -DCMAKE_AR="$AR"                       \
 -DCMAKE_NM="$NM"                       \
 -DCMAKE_STRIP="$STRIP"                 \
 -DCMAKE_RANLIB="$RANLIB"               \
 -DCMAKE_LINKER="$LD"                   \
 -DCMAKE_OBJCOPY="$OBJCOPY"             \
 -DCMAKE_OBJDUMP="$OBJDUMP"             \
 -DCMAKE_READELF="$READELF"             \
 -DCMAKE_ADDR2LINE="$ADDR2LINE"         \
 -DCMAKE_C_COMPILER="$CC"               \
 -DCMAKE_CXX_COMPILER="$CXX"            \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"     \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"   \
\
 ../

samu
samu install

mv -v "${penis}"/lib/libglfw3.a \
      "${penis}"/lib/libglfw.a

cd ../../; rm -rf glfw-3.3.4/

# 5 > sndfile
tar xf /mss/work/sauces/libsndfile-1.0.31.tar.bz2
cd     libsndfile-1.0.31/

./configure \
 --build=$CBUILD     \
 --host=$CHOST       \
 --prefix="${penis}" \
 --disable-shared    \
 --enable-static

make
make install

cd ../; rm -rf libsndfile-1.0.31/

# 6 > mpg123
tar xf /mss/work/sauces/mpg123-1.27.2.tar.bz2
cd     mpg123-1.27.2/

./configure \
 --build=$CBUILD               \
 --host=$CHOST                 \
 --prefix="${penis}"           \
 --disable-dependency-tracking \
 --with-pic                    \
 --with-optimization=0         \
 --with-cpu=i386_fpu           \
 --with-audio="alsa"           \
 --disable-shared              \
 --enable-static

make
make install

cd ../; rm -rf mpg123-1.27.2/

# 7 > premake
unzip -q /mss/work/sauces/premake-5.0.0-beta1-src.zip
cd       premake-5.0.0-beta1-src/build/gmake2.unix/

make config=release

cd ../../../
mv premake-5.0.0-beta1-src/bin/release/premake5 .

rm -rf premake-5.0.0-beta1-src/

# 7 > re3
tar xf /mss/work/sauces/re3-20210904_095606.tar.zst
cd     re3/

cp ../premake5 ./premake5Linux

./premake5Linux --with-librw --verbose gmake2
./printHash.sh src/extras/GitSHA1.cpp

make -C build config=release_linux-amd64-librw_gl3_glfw-oal verbose=yes              \
 CC="${CC}" CXX="${CXX}" AR="${AR}" NM="${NM}" RANLIB="${RANLIB}" CFLAGS="${CFLAGS}" \
 CXXFLAGS="${CXXFLAGS}" LDFLAGS="${LDFLAGS} -lX11"

re3dir="/mss/work/table/out/re3"
mkdir -pv "${re3dir}"

cp -rfv \
 bin/linux-amd64-librw_gl3_glfw-oal/Release/re3 \
 gamefiles/                                     \
 "${re3dir}"

cd ../; rm -rf re3/

# 8 > reVC
tar xf /mss/work/sauces/re3-20210904_095606.tar.zst
cd     re3/

git checkout miami

cp ../premake5 ./premake5Linux

./premake5Linux --with-librw --verbose gmake2
./printHash.sh src/extras/GitSHA1.cpp

make -C build config=release_linux-amd64-librw_gl3_glfw-oal verbose=yes              \
 CC="${CC}" CXX="${CXX}" AR="${AR}" NM="${NM}" RANLIB="${RANLIB}" CFLAGS="${CFLAGS}" \
 CXXFLAGS="${CXXFLAGS}" LDFLAGS="${LDFLAGS} -lX11"

revcdir="/mss/work/table/out/reVC"
mkdir -pv "${revcdir}"

cp -rfv \
 bin/linux-amd64-librw_gl3_glfw-oal/Release/reVC \
 gamefiles/                                      \
 "${revcdir}"

cd ../; rm -rf re3

# 9 > strippery
strip --strip-all \
 "${re3dir}"/re3  \
 "${revcdir}"/reVC
