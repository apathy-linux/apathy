From cb8825be9e9200bd9f4d627467dac022e322ed21 Mon Sep 17 00:00:00 2001
From: mssx86 <mss@tutanota.de>
Date: Fri, 13 May 2022 11:09:08 +0300
Subject: [PATCH 02/10] nuke discoverystream and topsites.

---
 .../newtab/lib/AboutPreferences.jsm           |  29 +----
 .../components/newtab/lib/ActivityStream.jsm  | 120 ++++--------------
 .../newtab/lib/DiscoveryStreamFeed.jsm        |  43 +------
 .../components/newtab/lib/SectionsManager.jsm |   8 --
 .../components/newtab/lib/TopSitesFeed.jsm    |  41 +-----
 5 files changed, 37 insertions(+), 204 deletions(-)

diff --git a/browser/components/newtab/lib/AboutPreferences.jsm b/browser/components/newtab/lib/AboutPreferences.jsm
index 62f8257b3c..82fa7fe65a 100644
--- a/browser/components/newtab/lib/AboutPreferences.jsm
+++ b/browser/components/newtab/lib/AboutPreferences.jsm
@@ -36,15 +36,7 @@ const PREFS_BEFORE_SECTIONS = () => [
       titleString: "home-prefs-shortcuts-header",
       descString: "home-prefs-shortcuts-description",
       get nestedPrefs() {
-        return Services.prefs.getBoolPref("browser.topsites.useRemoteSetting")
-          ? [
-              {
-                name: "showSponsoredTopSites",
-                titleString: "home-prefs-shortcuts-by-option-sponsored",
-                eventSource: "SPONSORED_TOP_SITES",
-              },
-            ]
-          : [];
+        return [];
       },
     },
     icon: "topsites",
@@ -135,7 +127,6 @@ this.AboutPreferences = class AboutPreferences {
     this.renderPreferences(window, [
       ...PREFS_BEFORE_SECTIONS(featureConfig),
       ...sections,
-      ...PREFS_AFTER_SECTIONS(featureConfig),
     ]);
   }
 
@@ -195,6 +186,11 @@ this.AboutPreferences = class AboutPreferences {
       const { feed: name, titleString = {}, descString, nestedPrefs = [] } =
         prefData || {};
 
+      // Remove topstories section entirely
+      if (id === "topstories") {
+        return;
+      }
+
       // Don't show any sections that we don't want to expose in preferences UI
       if (shouldHidePref) {
         return;
@@ -223,19 +219,6 @@ this.AboutPreferences = class AboutPreferences {
 
       linkPref(checkbox, name, "bool");
 
-      // Specially add a link for stories
-      if (id === "topstories") {
-        const sponsoredHbox = createAppend("hbox", sectionVbox);
-        sponsoredHbox.setAttribute("align", "center");
-        sponsoredHbox.appendChild(checkbox);
-        checkbox.classList.add("tail-with-learn-more");
-
-        const link = createAppend("label", sponsoredHbox, { is: "text-link" });
-        link.classList.add("learn-sponsored");
-        link.setAttribute("href", sectionData.pref.learnMore.link.href);
-        document.l10n.setAttributes(link, sectionData.pref.learnMore.link.id);
-      }
-
       // Add more details for the section (e.g., description, more prefs)
       const detailVbox = createAppend("vbox", sectionVbox);
       detailVbox.classList.add("indent");
diff --git a/browser/components/newtab/lib/ActivityStream.jsm b/browser/components/newtab/lib/ActivityStream.jsm
index 522aa94c57..03c1414e51 100644
--- a/browser/components/newtab/lib/ActivityStream.jsm
+++ b/browser/components/newtab/lib/ActivityStream.jsm
@@ -117,10 +117,7 @@ const LOCALE_LIST_CONFIG =
 
 // Determine if spocs should be shown for a geo/locale
 function showSpocs({ geo }) {
-  const spocsGeoString =
-    Services.prefs.getStringPref(REGION_SPOCS_CONFIG) || "";
-  const spocsGeo = spocsGeoString.split(",").map(s => s.trim());
-  return spocsGeo.includes(geo);
+  return false;
 }
 
 // Configure default Activity Stream prefs with a plain `value` or a `getValue`
@@ -147,15 +144,10 @@ const PREFS_CONFIG = new Map([
           hidden: !PREFS_CONFIG.get("feeds.system.topstories").getValue(args),
           provider_icon: "chrome://global/skin/icons/pocket.svg",
           provider_name: "Pocket",
-          read_more_endpoint:
-            "https://getpocket.com/explore/trending?src=fx_new_tab",
-          stories_endpoint: `https://getpocket.cdn.mozilla.net/v3/firefox/global-recs?version=3&consumer_key=$apiKey&locale_lang=${
-            args.locale
-          }&feed_variant=${
-            showSpocs(args) ? "default_spocs_on" : "default_spocs_off"
-          }`,
-          stories_referrer: "https://getpocket.com/recommendations",
-          topics_endpoint: `https://getpocket.cdn.mozilla.net/v3/firefox/trending-topics?version=2&consumer_key=$apiKey&locale_lang=${args.locale}`,
+          read_more_endpoint: "",
+          stories_endpoint: "",
+          stories_referrer: "",
+          topics_endpoint: "",
           show_spocs: showSpocs(args),
         }),
     },
@@ -164,7 +156,7 @@ const PREFS_CONFIG = new Map([
     "feeds.topsites",
     {
       title: "Displays Top Sites on the New Tab Page",
-      value: true,
+      value: false,
     },
   ],
   [
@@ -180,14 +172,14 @@ const PREFS_CONFIG = new Map([
     {
       title:
         "Show sponsored cards in spoc experiment (show_spocs in topstories.options has to be set to true as well)",
-      value: true,
+      value: false,
     },
   ],
   [
     "showSponsoredTopSites",
     {
       title: "Show sponsored top sites",
-      value: true,
+      value: false,
     },
   ],
   [
@@ -206,7 +198,7 @@ const PREFS_CONFIG = new Map([
     "showSearch",
     {
       title: "Show the Search bar",
-      value: true,
+      value: false,
     },
   ],
   [
@@ -227,7 +219,7 @@ const PREFS_CONFIG = new Map([
     "telemetry",
     {
       title: "Enable system error and usage data collection",
-      value: true,
+      value: false,
       value_local_dev: false,
     },
   ],
@@ -235,7 +227,7 @@ const PREFS_CONFIG = new Map([
     "telemetry.ut.events",
     {
       title: "Enable Unified Telemetry event data collection",
-      value: AppConstants.EARLY_BETA_OR_EARLIER,
+      value: false,
       value_local_dev: false,
     },
   ],
@@ -243,7 +235,7 @@ const PREFS_CONFIG = new Map([
     "telemetry.structuredIngestion.endpoint",
     {
       title: "Structured Ingestion telemetry server endpoint",
-      value: "https://incoming.telemetry.mozilla.org/submit",
+      value: "",
     },
   ],
   [
@@ -251,7 +243,7 @@ const PREFS_CONFIG = new Map([
     {
       title:
         "Boolean flag that decides whether or not to show visited pages in highlights.",
-      value: true,
+      value: false,
     },
   ],
   [
@@ -259,7 +251,7 @@ const PREFS_CONFIG = new Map([
     {
       title:
         "Boolean flag that decides whether or not to show bookmarks in highlights.",
-      value: true,
+      value: false,
     },
   ],
   [
@@ -267,7 +259,7 @@ const PREFS_CONFIG = new Map([
     {
       title:
         "Boolean flag that decides whether or not to show saved Pocket stories in highlights.",
-      value: true,
+      value: false,
     },
   ],
   [
@@ -275,7 +267,7 @@ const PREFS_CONFIG = new Map([
     {
       title:
         "Boolean flag that decides whether or not to show saved recent Downloads in highlights.",
-      value: true,
+      value: false,
     },
   ],
   [
@@ -296,7 +288,7 @@ const PREFS_CONFIG = new Map([
     "sectionOrder",
     {
       title: "The rendering order for the sections",
-      value: "topsites,topstories,highlights",
+      value: "",
     },
   ],
   [
@@ -313,21 +305,7 @@ const PREFS_CONFIG = new Map([
         "An ordered, comma-delimited list of search shortcuts that we should try and pin",
       // This pref is dynamic as the shortcuts vary depending on the region
       getValue: ({ geo }) => {
-        if (!geo) {
-          return "";
-        }
-        const searchShortcuts = [];
-        if (geo === "CN") {
-          searchShortcuts.push("baidu");
-        } else if (["BY", "KZ", "RU", "TR"].includes(geo)) {
-          searchShortcuts.push("yandex");
-        } else {
-          searchShortcuts.push("google");
-        }
-        if (["DE", "FR", "GB", "IT", "JP", "US"].includes(geo)) {
-          searchShortcuts.push("amazon");
-        }
-        return searchShortcuts.join(",");
+        return "";
       },
     },
   ],
@@ -377,12 +355,12 @@ const PREFS_CONFIG = new Map([
         return JSON.stringify({
           api_key_pref: "extensions.pocket.oAuthConsumerKey",
           collapsible: true,
-          enabled: true,
+          enabled: false,
           show_spocs: showSpocs({ geo }),
           hardcoded_layout: true,
           // This is currently an exmple layout used for dev purposes.
           layout_endpoint:
-            "https://getpocket.cdn.mozilla.net/v3/newtab/layout?version=1&consumer_key=$apiKey&layout_variant=basic",
+            "",
         });
       },
     },
@@ -392,7 +370,7 @@ const PREFS_CONFIG = new Map([
     {
       title:
         "Endpoint prefixes (comma-separated) that are allowed to be requested",
-      value: "https://getpocket.cdn.mozilla.net/,https://spocs.getpocket.com/",
+      value: "",
     },
   ],
   [
@@ -445,7 +423,7 @@ const PREFS_CONFIG = new Map([
     {
       title:
         "Endpoint for when a user opts-out of sponsored content to delete the user's data from the ad server.",
-      value: "https://spocs.getpocket.com/user",
+      value: "",
     },
   ],
   [
@@ -504,49 +482,7 @@ const FEEDS_DATA = [
       "System pref that fetches content recommendations from a configurable content provider",
     // Dynamically determine if Pocket should be shown for a geo / locale
     getValue: ({ geo, locale }) => {
-      // If we don't have geo, we don't want to flash the screen with stories while geo loads.
-      // Best to display nothing until geo is ready.
-      if (!geo) {
-        return false;
-      }
-      const preffedRegionsBlockString =
-        Services.prefs.getStringPref(REGION_STORIES_BLOCK) || "";
-      const preffedRegionsString =
-        Services.prefs.getStringPref(REGION_STORIES_CONFIG) || "";
-      const preffedLocaleListString =
-        Services.prefs.getStringPref(LOCALE_LIST_CONFIG) || "";
-      const preffedBlockRegions = preffedRegionsBlockString
-        .split(",")
-        .map(s => s.trim());
-      const preffedRegions = preffedRegionsString.split(",").map(s => s.trim());
-      const preffedLocales = preffedLocaleListString
-        .split(",")
-        .map(s => s.trim());
-      const locales = {
-        US: ["en-CA", "en-GB", "en-US"],
-        CA: ["en-CA", "en-GB", "en-US"],
-        GB: ["en-CA", "en-GB", "en-US"],
-        AU: ["en-CA", "en-GB", "en-US"],
-        NZ: ["en-CA", "en-GB", "en-US"],
-        IN: ["en-CA", "en-GB", "en-US"],
-        IE: ["en-CA", "en-GB", "en-US"],
-        ZA: ["en-CA", "en-GB", "en-US"],
-        CH: ["de"],
-        BE: ["de"],
-        DE: ["de"],
-        AT: ["de"],
-        IT: ["it"],
-        FR: ["fr"],
-        ES: ["es"],
-        PL: ["pl"],
-        JP: ["ja", "ja-JP-mac"],
-      }[geo];
-
-      const regionBlocked = preffedBlockRegions.includes(geo);
-      const localeEnabled = locale && preffedLocales.includes(locale);
-      const regionEnabled =
-        preffedRegions.includes(geo) && !!locales && locales.includes(locale);
-      return !regionBlocked && (localeEnabled || regionEnabled);
+      return false;
     },
   },
   {
@@ -559,31 +495,31 @@ const FEEDS_DATA = [
     name: "telemetry",
     factory: () => new TelemetryFeed(),
     title: "Relays telemetry-related actions to PingCentre",
-    value: true,
+    value: false,
   },
   {
     name: "favicon",
     factory: () => new FaviconFeed(),
     title: "Fetches tippy top manifests from remote service",
-    value: true,
+    value: false,
   },
   {
     name: "system.topsites",
     factory: () => new TopSitesFeed(),
     title: "Queries places and gets metadata for Top Sites section",
-    value: true,
+    value: false,
   },
   {
     name: "recommendationprovider",
     factory: () => new RecommendationProvider(),
     title: "Handles setup and interaction for the personality provider",
-    value: true,
+    value: false,
   },
   {
     name: "discoverystreamfeed",
     factory: () => new DiscoveryStreamFeed(),
     title: "Handles new pocket ui for the new tab page",
-    value: true,
+    value: false,
   },
 ];
 
diff --git a/browser/components/newtab/lib/DiscoveryStreamFeed.jsm b/browser/components/newtab/lib/DiscoveryStreamFeed.jsm
index 11d2be118f..b3ad75c795 100644
--- a/browser/components/newtab/lib/DiscoveryStreamFeed.jsm
+++ b/browser/components/newtab/lib/DiscoveryStreamFeed.jsm
@@ -1909,7 +1909,7 @@ getHardcodedLayout = ({
 }) => ({
   lastUpdate: Date.now(),
   spocs: {
-    url: "https://spocs.getpocket.com/spocs",
+    url: "",
   },
   layout: [
     {
@@ -2010,7 +2010,7 @@ getHardcodedLayout = ({
           feed: {
             embed_reference: null,
             url:
-              "https://getpocket.cdn.mozilla.net/v3/firefox/global-recs?version=3&consumer_key=$apiKey&locale_lang=$locale&region=$region&count=30",
+              "",
           },
           spocs: {
             probability: 1,
@@ -2025,47 +2025,8 @@ getHardcodedLayout = ({
           properties: {
             alignment: "left-align",
             links: [
-              {
-                name: "Self improvement",
-                url:
-                  "https://getpocket.com/explore/self-improvement?utm_source=pocket-newtab",
-              },
-              {
-                name: "Food",
-                url:
-                  "https://getpocket.com/explore/food?utm_source=pocket-newtab",
-              },
-              {
-                name: "Entertainment",
-                url:
-                  "https://getpocket.com/explore/entertainment?utm_source=pocket-newtab",
-              },
-              {
-                name: "Health & fitness",
-                url:
-                  "https://getpocket.com/explore/health?utm_source=pocket-newtab",
-              },
-              {
-                name: "Science",
-                url:
-                  "https://getpocket.com/explore/science?utm_source=pocket-newtab",
-              },
-              {
-                name: "More recommendations ›",
-                url: "https://getpocket.com/explore?utm_source=pocket-newtab",
-              },
             ],
             extraLinks: [
-              {
-                name: "Career",
-                url:
-                  "https://getpocket.com/explore/career?utm_source=pocket-newtab",
-              },
-              {
-                name: "Technology",
-                url:
-                  "https://getpocket.com/explore/technology?utm_source=pocket-newtab",
-              },
             ],
             privacyNoticeURL: {
               url:
diff --git a/browser/components/newtab/lib/SectionsManager.jsm b/browser/components/newtab/lib/SectionsManager.jsm
index f1a86c6070..ebe625b60d 100644
--- a/browser/components/newtab/lib/SectionsManager.jsm
+++ b/browser/components/newtab/lib/SectionsManager.jsm
@@ -113,14 +113,6 @@ const BUILT_IN_SECTIONS = () => ({
           name: "section.highlights.includeDownloads",
           titleString: "home-prefs-highlights-option-most-recent-download",
         },
-        {
-          name: "section.highlights.includePocket",
-          titleString: "home-prefs-highlights-option-saved-to-pocket",
-          hidden: !Services.prefs.getBoolPref(
-            "extensions.pocket.enabled",
-            true
-          ),
-        },
       ],
     },
     shouldHidePref: false,
diff --git a/browser/components/newtab/lib/TopSitesFeed.jsm b/browser/components/newtab/lib/TopSitesFeed.jsm
index a02be7fc94..533c3827dd 100644
--- a/browser/components/newtab/lib/TopSitesFeed.jsm
+++ b/browser/components/newtab/lib/TopSitesFeed.jsm
@@ -416,24 +416,6 @@ this.TopSitesFeed = class TopSitesFeed {
       }
       if (siteData.search_shortcut) {
         link = await this.topSiteToSearchTopSite(link);
-      } else if (siteData.sponsored_position) {
-        if (contileEnabled && hasContileTiles) {
-          continue;
-        }
-        const {
-          sponsored_position,
-          sponsored_tile_id,
-          sponsored_impression_url,
-          sponsored_click_url,
-        } = siteData;
-        link = {
-          sponsored_position,
-          sponsored_tile_id,
-          sponsored_impression_url,
-          sponsored_click_url,
-          show_sponsored_label: link.hostname !== "yandex",
-          ...link,
-        };
       }
       DEFAULT_TOP_SITES.push(link);
     }
@@ -741,14 +723,7 @@ this.TopSitesFeed = class TopSitesFeed {
         continue;
       }
       if (link.sponsored_position) {
-        if (!prefValues[SHOW_SPONSORED_PREF]) {
-          continue;
-        }
-        sponsored[link.sponsored_position - 1] = link;
-
-        // Unpin search shortcut if present for the sponsored link to be shown
-        // instead.
-        this._unpinSearchShortcut(link.hostname);
+        continue;
       } else {
         notBlockedDefaultSites.push(
           searchShortcutsExperiment
@@ -837,20 +812,6 @@ this.TopSitesFeed = class TopSitesFeed {
 
     // Insert the original pinned sites into the deduped frecent and defaults.
     let withPinned = insertPinned(checkedAdult, pinned);
-    // Insert sponsored sites at their desired position.
-    dedupedSponsored.forEach(link => {
-      if (!link) {
-        return;
-      }
-      let index = link.sponsored_position - 1;
-      if (index > withPinned.length) {
-        withPinned[index] = link;
-      } else {
-        withPinned.splice(index, 0, link);
-      }
-    });
-    // Remove excess items after we inserted sponsored ones.
-    withPinned = withPinned.slice(0, numItems);
 
     // Now, get a tippy top icon, a rich icon, or screenshot for every item
     for (const link of withPinned) {
-- 
2.36.0

