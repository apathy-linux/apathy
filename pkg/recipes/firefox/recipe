# 1 > env vars
penis="/mss/work/table/KEK"
export                 CFLAGS="${CFLAGS}   -L${penis}/lib -I${penis}/include"
export               CXXFLAGS="${CXXFLAGS} -L${penis}/lib -I${penis}/include"
export                LDFLAGS="${LDFLAGS} -Wl,-rpath=/opt/firefox-78.12.0esr,--enable-new-dtags"

                    RUSTFLAGS="-Clinker=${CC} -Ctarget-cpu=native -Lnative=$(llvm-config --libdir)"
export              RUSTFLAGS="${RUSTFLAGS} -Cdebuginfo=0 -Cdebug-assertions=off"
export         BINDGEN_CFLAGS="${CFLAGS}"

export        PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:${penis}/lib/pkgconfig"
export        LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${penis}/lib"
export           LIBRARY_PATH="${LD_LIBRARY_PATH}"

export              CXXSTDLIB="c++"
export            RUST_TARGET="${CHOST}"
export             MOZ_NOSPAM=1
export        MOZ_DEBUG_FLAGS="-g0"
export MACH_USE_SYSTEM_PYTHON=1

# 2 > static libXt?
# doesn't link against it but still wants it for build for some reason
tar xf /mss/work/sauces/xorg-libs/libXt-1.2.1.tar.bz2
cd     libXt-1.2.1/

./configure \
 --build=$CBUILD             \
 --host=$CHOST               \
 --prefix="${penis}"         \
 --enable-static             \
 --disable-shared            \
 --sysconfdir=/etc           \
 --localstatedir=/var        \
 --enable-malloc0returnsnull \
 --without-fop               \
 --without-glib              \
 --without-perl              \
 --without-xmlto             \
 --without-xsltproc          \
 --disable-specs             \
 --disable-unit-tests

make
make install

cd ../; rm -rf libXt-1.2.1/

# 3 > extraction
tar xf /mss/work/sauces/firefox-78.12.0esr.source.tar.xz
cd     firefox-78.12.0/

# 4 > apply patches
pdir="/mss/repo/pkg/recipes/firefox/patches"
for file in "${pdir}"/*.patch; do patch -p1 < "${file}"; done

# 5 > nuke addons and pocket
rm -rf \
 browser/{components/pocket,extensions/{webcompat,doh-rollout,screenshots,report-site-issue}}

# 6 > clear sums
for sum in audio_thread_priority target-lexicon-0.9.0 packed_simd; do
 sed -i 's/\("files":{\)[^}]*/\1/'  third_party/rust/${sum}/.cargo-checksum.json
done

# 7 > clear the default bookmarks
fdir="/mss/repo/pkg/recipes/firefox/files"
cp -vf "${fdir}"/bookmarks.html.in  browser/locales/generic/profile/bookmarks.html.in

# 8 > add header from alpine
cp -vf "${fdir}"/stab.h             toolkit/crashreporter/google-breakpad/src/

# 9 > remove prebuilt binaries
find ./third_party -type f \( -name '*.so' -o -name '*.o' \) -print -delete

# 10 > start the build
cp -v "${fdir}"/mozconfig .
_echoflags="$(echo ${CXXFLAGS} | sed 's/\//\\\//g')"
sed -i -e "s/REPLACEMEYOUWONT/${_echoflags}/g" mozconfig
unset _echoflags

time ./mach build

# 11 > install
instdir="${PWD}/KEK"
DESTDIR="${instdir}" ./mach install

install -v -Dm644 "${fdir}"/vendor.js     "${instdir}"/usr/lib/firefox/browser/defaults/preferences/vendor.js
install -v -Dm644 "${fdir}"/policies.json "${instdir}"/usr/lib/firefox/distribution/policies.json
