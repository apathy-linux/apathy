# 1 > env vars
penis="/mss/work/table/KEK"
export                 CFLAGS="${CFLAGS}   -L${penis}/lib -I${penis}/include"
export               CXXFLAGS="${CXXFLAGS} -L${penis}/lib -I${penis}/include"
export                LDFLAGS="${LDFLAGS},-rpath=/opt/firefox-102.0b6/lib,--enable-new-dtags"

                    RUSTFLAGS="-Clinker=${CC} -Ctarget-cpu=native -Lnative=$(llvm-config --libdir)"
export              RUSTFLAGS="${RUSTFLAGS} -Cdebuginfo=0 -Cdebug-assertions=off"
export         BINDGEN_CFLAGS="${CFLAGS}"

export                   PATH="${penis}/bin:${PATH}"
export        PKG_CONFIG_PATH="${PKG_CONFIG_PATH}:${penis}/lib/pkgconfig"
export        LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${penis}/lib"
export           LIBRARY_PATH="${LD_LIBRARY_PATH}"

export              CXXSTDLIB="c++"
export            RUST_TARGET="${CHOST}"
export             MOZ_NOSPAM=1
export        MOZ_DEBUG_FLAGS="-g0"

export     MOZBUILD_STATE_PATH="${PWD}/state"

export PIP_NETWORK_INSTALL_RESTRICTED_VIRTUALENVS="mach"
export    MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE="system"

myxconf(){
 ./configure \
  --build=$CBUILD             \
  --host=$CHOST               \
  --prefix="${penis}"         \
  --enable-static             \
  --disable-shared            \
  --sysconfdir=/etc           \
  --localstatedir=/var        \
  --enable-malloc0returnsnull \
  --without-fop               \
  --without-glib              \
  --without-perl              \
  --without-xmlto             \
  --without-xsltproc          \
  --disable-specs             \
  --disable-unit-tests
}

# 2 > static libXt
tar xf /mss/work/sauces/xorg-libs/libXt-1.2.1.tar.bz2
cd     libXt-1.2.1/

myxconf

make
make install

cd ../; rm -rf libXt-1.2.1/

# 3 > static libXtst
tar xf /mss/work/sauces/libXtst-1.2.3.tar.bz2
cd     libXtst-1.2.3/

myxconf

make
make install

cd ../; rm -rf libXtst-1.2.3/

# 4 > autoconf 2.13
tar xf /mss/work/sauces/autoconf-2.13.tar.gz
cd     autoconf-2.13/

configtomusl

./configure \
 --build=$CBUILD     \
 --host=$CHOST       \
 --prefix="${penis}" \
 --program-suffix="-2.13"

make
make install

cd ../; rm -rf autoconf-2.13/

# 5 > yasm
tar xf /mss/work/sauces/yasm-1.3.0.tar.gz
cd     yasm-1.3.0/

configtomusl

./configure \
 --build=$CBUILD \
 --host=$CHOST   \
 --prefix="${penis}"

make
make install

cd ../; rm -rf yasm-1.3.0/

# 6 > zip
tar xf /mss/work/sauces/zip30.tar.gz
cd     zip30/

make LOCAL_ZIP="${CFLAGS}" -f unix/Makefile generic
make prefix="${penis}"     -f unix/Makefile install

cd ../; rm -rf zip30/

# 7 > extraction
tar xf /mss/work/sauces/firefox-102.0b6.source.tar.xz
cd     firefox-102.0/

# 8 > apply patches
pdir="/mss/repo/pkg/recipes/firefox/patches"
for file in "${pdir}"/*.patch; do patch -p1 < "${file}"; done

# 9 > nuke undesried requests
for i in `grep firefox\\.settings\\.services\\.mozilla\\.com -r . -l 2>/dev/null`; do
 sed -i -e 's/firefox\.settings\.services\.mozilla\.com/f.s.s.m.c.qjz9zk/g' "${i}"
done

# 10 > nuke addons and pocket
rm -rf \
 browser/components/pocket                                           \
 browser/extensions/{doh-rollout,pictureinpicture,report-site-issue} \
 browser/extensions/{screenshots,search-detection,webcompat}

# 11 > clear sums
for sum in target-lexicon-0.9.0; do
 sed -i 's/\("files":{\)[^}]*/\1/'  third_party/rust/${sum}/.cargo-checksum.json
done

# 12 > clear the default bookmarks
fdir="/mss/repo/pkg/recipes/firefox/files"
cp -vf "${fdir}"/default-bookmarks.html browser/base/content/default-bookmarks.html

# 13 > clear search engines
cp -vf "${fdir}"/search-config.json services/settings/dumps/main/search-config.json

# 14 > remove prebuilt binaries
find ./third_party -type f \( -name '*.so' -o -name '*.o' \) -print -delete

# 15 > start the build
cp -v "${fdir}"/mozconfig .
_echoflags="$(echo ${CXXFLAGS} | sed 's/\//\\\//g')"
sed -i -e "s/REPLACEMEYOUWONT/${_echoflags}/g;s/JOBCOUNTREPLACE/${ajobcount}/g" \
 mozconfig
unset _echoflags

sed -i -e 's/pip\ +\ \[\"check\"\],/pip + \[\"--version\"\],/g' \
 python/mach/mach/site.py

time ./mach build

# 16 > install
instdir="${PWD}/KEK/opt/firefox-102.0b6"
DESTDIR="${PWD}/dummyinstall" ./mach install

mkdir "${instdir}"/bin
mv    "${PWD}/dummyinstall"/opt/firefox-102.0b6/lib/firefox "${instdir}"/lib
pushd "${instdir}"/bin
ln -sfv ../lib/firefox firefox
popd

install -v -Dm644 "${fdir}"/vendor.js     \
 "${instdir}"/lib/browser/defaults/preferences/vendor.js
install -v -Dm644 "${fdir}"/policies.json \
 "${instdir}"/lib/distribution/policies.json
