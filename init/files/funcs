#!/mss/bin/sh
. /mss/files/sourceme
export PATH="/mss/init/bin:${PATH}"

# 1 > prompts
 sbefore="    "
 pbefore="  "
cur_zero="\\033[0G"
  s_fail="${cb_red}f${c_res}"
  s_info="${cb_blu}i${c_res}"
  s_succ="${cb_grn}s${c_res}"
   s_arm="${cb_cyn}â””${c_res}"

# 2 > funcs
ainit_nc()  { printf "\n";}
ainitmes()  { printf "${sbefore}${@}";}
ainitsvc()  { printf "${sbefore}${cb_blu}${1}${c_res} ${2}.";}
failprompt(){ printf "${cur_zero}${pbefore}${s_fail}\n";}
infoprompt(){ printf "${cur_zero}${pbefore}${s_info}\n";}
succprompt(){ printf "${cur_zero}${pbefore}${s_succ}\n";}
armprompt() { printf "${cur_zero}${pbefore}${s_arm}\n";}

ainitusage(){
 printf "${sbefore}${cb_grn}usage${cb_blu}:${c_res} ${@}."
 infoprompt
}

evalret(){
 local exitval="${?}"

 if [ ${exitval} -eq 0 ]
  then succprompt
  else
   failprompt
   ainitmes "${cb_red}service exited with ${cb_grn}${exitval}${c_res}."; armprompt
 fi
}

ainit_mount(){
 mountpoint $4 >/dev/null 2>&1 \
  && mount -o "remount,$1" -t "$2" "$3" "$4" \
  || mount -o         "$1" -t "$2" "$3" "$4"
}

getos(){
 d_name="$(awk '/^NAME/{sub(/NAME=/,"");       print}' /etc/os-release)"
  d_var="$(awk '/^VARI/{sub(/VARIANT=/,"");    print}' /etc/os-release)"
  d_ver="$(awk '/^VERS/{sub(/VERSION_ID=/,""); print}' /etc/os-release)"
   dist="${cb_blu}${d_name} ${cb_red}${d_var} ${cb_cyn}${d_ver}${c_res}"

 uname_v="$(uname -v)"

 case "${uname_v}" in
  *PREEMPT*) kerdat="$(echo ${uname_v} | awk '{print tolower($5),$6,$7}')" ;;
          *) kerdat="$(echo ${uname_v} | awk '{print tolower($4),$5,$6}')" ;;
 esac

 kerfmt="${cb_red}$(uname -r) ${cb_blu}(${cl_whi}${kerdat}${cb_blu})${c_res}"
}

banner(){
 getos

 date="$(date '+%a %d %I:%M:%S%P' | awk '{print tolower($0)}')"

 clear
 ainit_nc; ainit_nc
 ainitmes "${dist} - ${cb_blk}${date}${c_res}"; ainit_nc
 ainitmes "${kerfmt}";                          ainit_nc
 ainit_nc
}

ainit_kill(){
 case "${1}" in
  sshd) pidlist="$(pidof sshd)"    ;;
     *) pidlist="$(pgrep -x ${1})" ;;
 esac

 if [ -z "${pidlist}" ]
  then
   failprompt
   ainitmes "${cb_red}no proccess found to kill${c_res}."; armprompt
  else
   if [ -z "${2}" ]; then usesig="-TERM"; else usesig="-HUP"; fi

   for i in ${pidlist}; do
    printf " ${cb_blu}${i}${c_res}"
    kill "${usesig}" "${i}" >/dev/null 2>&1
   done
   evalret
 fi
}

xorgexec(){
 if pidof X >/dev/null 2>&1
  then
   DISPLAY=:0 ${@}
  else
   ainitmes "X is not running."; failprompt
   exit 1
 fi
}

if [ "$(id -u)" -ne 0 ]; then
 ainitmes "this script must be run as uid 0, exiting."; failprompt
 exit 1
fi
